"""Initial database set up

Revision ID: d37203242134
Revises: 
Create Date: 2025-09-03 15:17:49.624446

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd37203242134'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('connector_definitions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('kind', sa.Enum('JDBC', 'WAREHOUSE', 'OBJECT_STORE', 'UNSTRUCTURED', 'API', 'FILE', name='connectorkind'), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('capabilities', sa.JSON(), nullable=False),
    sa.Column('connection_schema', sa.JSON(), nullable=False),
    sa.Column('secret_schema', sa.JSON(), nullable=False),
    sa.Column('image_ref', sa.String(), nullable=True),
    sa.Column('docs_url', sa.String(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key', 'version', name='uq_connector_definitions_key_version')
    )
    op.create_table('data_sources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('connector_key', sa.String(), nullable=False),
    sa.Column('connector_version', sa.String(), nullable=False),
    sa.Column('kind', sa.Enum('JDBC', 'WAREHOUSE', 'OBJECT_STORE', 'UNSTRUCTURED', 'API', 'FILE', name='connectorkind'), nullable=False),
    sa.Column('config_json', sa.JSON(), nullable=False),
    sa.Column('secret_uri', sa.String(), nullable=True),
    sa.Column('network_profile', sa.JSON(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('connection_status', sa.Enum('ACTIVE', 'INACTIVE', 'PENDING', 'FAILED', 'CANCELLED', 'ERROR', 'TESTING', name='connectionstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_health_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'slug', name='uq_data_sources_tenant_id_slug')
    )
    op.create_index(op.f('ix_data_sources_tenant_id'), 'data_sources', ['tenant_id'], unique=False)
    op.create_table('assets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('data_source_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('DATABASE', 'SCHEMA', 'TABLE', 'VIEW', 'COLUMN', 'BUCKET', 'PREFIX', 'OBJECT', 'DOCUMENT_SET', 'DOCUMENT', name='assettype'), nullable=False),
    sa.Column('qualified_name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('native_identity', sa.JSON(), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id'], ['assets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'data_source_id', 'qualified_name', name='uq_assets_tenant_id_data_source_id_qualified_name')
    )
    op.create_index(op.f('ix_assets_qualified_name'), 'assets', ['qualified_name'], unique=False)
    op.create_index(op.f('ix_assets_tenant_id'), 'assets', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_assets_type'), 'assets', ['type'], unique=False)
    op.create_table('connector_runs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('data_source_id', sa.UUID(), nullable=False),
    sa.Column('run_type', sa.Enum('METADATA', 'PROFILE', 'SAMPLE', 'LINEAGE', 'SYNC', name='runtype'), nullable=False),
    sa.Column('trigger', sa.String(), nullable=False),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('QUEUED', 'RUNNING', 'SUCCEEDED', 'COMPLETED', 'FAILED', 'CANCELLED', 'PARTIAL', name='runstatus'), nullable=False),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', name='uq_connector_runs_id')
    )
    op.create_index(op.f('ix_connector_runs_tenant_id'), 'connector_runs', ['tenant_id'], unique=False)
    op.create_table('connector_schedules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('data_source_id', sa.UUID(), nullable=False),
    sa.Column('run_type', sa.Enum('METADATA', 'PROFILE', 'SAMPLE', 'LINEAGE', 'SYNC', name='runtype'), nullable=False),
    sa.Column('schedule_cron', sa.String(), nullable=False),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'data_source_id', 'run_type', 'schedule_cron', name='uq_conn_sched_tenant_ds_type_cron')
    )
    op.create_index(op.f('ix_connector_schedules_tenant_id'), 'connector_schedules', ['tenant_id'], unique=False)
    op.create_table('asset_fields',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ordinal_position', sa.Integer(), nullable=True),
    sa.Column('data_type', sa.String(), nullable=True),
    sa.Column('is_nullable', sa.Boolean(), nullable=True),
    sa.Column('default_expression', sa.String(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'asset_id', 'name', name='uq_asset_fields_tenant_id_asset_id_name')
    )
    op.create_index(op.f('ix_asset_fields_tenant_id'), 'asset_fields', ['tenant_id'], unique=False)
    op.create_table('asset_metadata',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('namespace', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'asset_id', 'namespace', 'key', name='uq_asset_metadata_tenant_id_asset_id_namespace_key')
    )
    op.create_index(op.f('ix_asset_metadata_namespace'), 'asset_metadata', ['namespace'], unique=False)
    op.create_index(op.f('ix_asset_metadata_tenant_id'), 'asset_metadata', ['tenant_id'], unique=False)
    op.create_table('asset_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('computed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('profile_kind', sa.String(), nullable=False),
    sa.Column('summary', sa.JSON(), nullable=False),
    sa.Column('histograms', sa.JSON(), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['run_id'], ['connector_runs.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_asset_profiles_tenant_id'), 'asset_profiles', ['tenant_id'], unique=False)
    op.create_table('asset_sample_sets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('sample_kind', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=True),
    sa.Column('item_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['run_id'], ['connector_runs.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_asset_sample_sets_tenant_id'), 'asset_sample_sets', ['tenant_id'], unique=False)
    op.create_table('lineage_edges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('src_asset_id', sa.UUID(), nullable=False),
    sa.Column('dst_asset_id', sa.UUID(), nullable=False),
    sa.Column('operation', sa.Enum('READ', 'WRITE', 'TRANSFORM', 'COPY', 'LOAD', 'EXTRACT', 'JOIN', 'AGGREGATE', 'DELETE', name='lineageop'), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['dst_asset_id'], ['assets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['run_id'], ['connector_runs.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['src_asset_id'], ['assets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'src_asset_id', 'dst_asset_id', 'operation', name='uq_lineage_edges_tenant_id_src_asset_id_dst_asset_id_operation')
    )
    op.create_index(op.f('ix_lineage_edges_dst_asset_id'), 'lineage_edges', ['dst_asset_id'], unique=False)
    op.create_index(op.f('ix_lineage_edges_src_asset_id'), 'lineage_edges', ['src_asset_id'], unique=False)
    op.create_index(op.f('ix_lineage_edges_tenant_id'), 'lineage_edges', ['tenant_id'], unique=False)
    op.create_table('lineage_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('data_source_id', sa.UUID(), nullable=True),
    sa.Column('producer', sa.String(), nullable=False),
    sa.Column('event_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('event_json', sa.JSON(), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_sources.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['run_id'], ['connector_runs.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lineage_events_event_time'), 'lineage_events', ['event_time'], unique=False)
    op.create_index(op.f('ix_lineage_events_tenant_id'), 'lineage_events', ['tenant_id'], unique=False)
    op.create_table('asset_sample_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sample_set_id', sa.UUID(), nullable=False),
    sa.Column('idx', sa.Integer(), nullable=False),
    sa.Column('payload_json', sa.JSON(), nullable=True),
    sa.Column('payload_text', sa.String(), nullable=True),
    sa.Column('payload_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['sample_set_id'], ['asset_sample_sets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sample_set_id', 'idx', name='uq_asset_sample_items_sample_set_id_idx')
    )
    op.create_table('field_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('field_id', sa.UUID(), nullable=False),
    sa.Column('computed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('stats', sa.JSON(), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['field_id'], ['asset_fields.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['run_id'], ['connector_runs.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_field_profiles_tenant_id'), 'field_profiles', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_field_profiles_tenant_id'), table_name='field_profiles')
    op.drop_table('field_profiles')
    op.drop_table('asset_sample_items')
    op.drop_index(op.f('ix_lineage_events_tenant_id'), table_name='lineage_events')
    op.drop_index(op.f('ix_lineage_events_event_time'), table_name='lineage_events')
    op.drop_table('lineage_events')
    op.drop_index(op.f('ix_lineage_edges_tenant_id'), table_name='lineage_edges')
    op.drop_index(op.f('ix_lineage_edges_src_asset_id'), table_name='lineage_edges')
    op.drop_index(op.f('ix_lineage_edges_dst_asset_id'), table_name='lineage_edges')
    op.drop_table('lineage_edges')
    op.drop_index(op.f('ix_asset_sample_sets_tenant_id'), table_name='asset_sample_sets')
    op.drop_table('asset_sample_sets')
    op.drop_index(op.f('ix_asset_profiles_tenant_id'), table_name='asset_profiles')
    op.drop_table('asset_profiles')
    op.drop_index(op.f('ix_asset_metadata_tenant_id'), table_name='asset_metadata')
    op.drop_index(op.f('ix_asset_metadata_namespace'), table_name='asset_metadata')
    op.drop_table('asset_metadata')
    op.drop_index(op.f('ix_asset_fields_tenant_id'), table_name='asset_fields')
    op.drop_table('asset_fields')
    op.drop_index(op.f('ix_connector_schedules_tenant_id'), table_name='connector_schedules')
    op.drop_table('connector_schedules')
    op.drop_index(op.f('ix_connector_runs_tenant_id'), table_name='connector_runs')
    op.drop_table('connector_runs')
    op.drop_index(op.f('ix_assets_type'), table_name='assets')
    op.drop_index(op.f('ix_assets_tenant_id'), table_name='assets')
    op.drop_index(op.f('ix_assets_qualified_name'), table_name='assets')
    op.drop_table('assets')
    op.drop_index(op.f('ix_data_sources_tenant_id'), table_name='data_sources')
    op.drop_table('data_sources')
    op.drop_table('connector_definitions')
    # ### end Alembic commands ###
